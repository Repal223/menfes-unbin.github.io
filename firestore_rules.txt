rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function isSignedIn() { return request.auth != null; }
    function isAdmin() { return isSignedIn() && request.auth.token.admin == true; }
    function isOwner(uid) { return isSignedIn() && request.auth.uid == uid; }

    // users: owner read/write, admin full
    match /users/{uid} {
      allow read, write: if isOwner(uid) || isAdmin();
    }

    // posts: public read for approved; owners/admin can write
    match /posts/{postId} {
      allow read: if resource.data.status == 'Approved' || isAdmin() || isOwner(resource.data.author_uid);
      allow create: if isSignedIn() && request.resource.data.author_uid == request.auth.uid;
      allow update, delete: if isAdmin() || (isOwner(resource.data.author_uid));

      // comments subcollection
      match /comments/{commentId} {
        allow read: if true; // public comments
        allow create: if isSignedIn() && request.resource.data.author_uid == request.auth.uid;
        allow update, delete: if isAdmin() || isOwner(resource.data.author_uid);
      }
    }

    // notifications: receiver can read; receiver can set read=true; create by actor (sender) or admin/CF
    match /notifications/{nid} {
      allow read: if isSignedIn() && resource.data.receiver_uid == request.auth.uid;
      allow create: if isSignedIn() && request.resource.data.sender_uid == request.auth.uid || isAdmin();
      allow update: if isSignedIn() && request.resource.data.read == true && resource.data.receiver_uid == request.auth.uid;
      allow delete: if false;
    }

    // roles: public readable list of admin/bem uids (write by admin or functions)
    match /roles/{rid} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // fcm_tokens: clients can write their own token docs; no public read
    match /fcm_tokens/{token} {
      allow read: if false;
      allow create, update: if isSignedIn() && request.resource.data.uid == request.auth.uid;
      allow delete: if isSignedIn() && resource.data.uid == request.auth.uid || isAdmin();
    }
  }
}
