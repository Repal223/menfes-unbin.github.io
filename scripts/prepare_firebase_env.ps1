param(
  [string]$FirebaseProject = $env:FIREBASE_PROJECT
)

$ErrorActionPreference = 'Stop'

function Require-Cmd($name){
  if (-not (Get-Command $name -ErrorAction SilentlyContinue)){
    throw "Command '$name' not found. Please install it first."
  }
}

Require-Cmd firebase

if (-not $FirebaseProject) { throw 'FIREBASE_PROJECT env var or -FirebaseProject is required' }

Write-Host "==> Preparing Firebase Web config from project '$FirebaseProject'" -ForegroundColor Cyan

# Ensure there is at least one WEB app
$appsJson = firebase apps:list --project $FirebaseProject --json | ConvertFrom-Json
$webApp = $appsJson.result | Where-Object { $_.platform -eq 'WEB' } | Select-Object -First 1
if (-not $webApp) {
  Write-Host "==> No WEB app found; creating one (menfes-web)" -ForegroundColor Yellow
  firebase apps:create WEB menfes-web --project $FirebaseProject | Out-Host
  $appsJson = firebase apps:list --project $FirebaseProject --json | ConvertFrom-Json
  $webApp = $appsJson.result | Where-Object { $_.platform -eq 'WEB' } | Select-Object -First 1
}
if (-not $webApp) { throw 'Failed to create/fetch Firebase WEB app' }

$cfgJson = firebase apps:sdkconfig WEB $($webApp.appId) --project $FirebaseProject --json | ConvertFrom-Json
$cfg = $cfgJson.result.sdkConfig

if (-not $cfg) { throw 'Failed to fetch sdkconfig' }

# Export to environment for current session
$env:FIREBASE_API_KEY = $cfg.apiKey
$env:FIREBASE_AUTH_DOMAIN = $cfg.authDomain
$env:FIREBASE_PROJECT_ID = $cfg.projectId
$env:FIREBASE_STORAGE_BUCKET = $cfg.storageBucket
$env:FIREBASE_MESSAGING_SENDER_ID = $cfg.messagingSenderId
$env:FIREBASE_APP_ID = $cfg.appId

Write-Host "==> Exported env: FIREBASE_API_KEY, FIREBASE_APP_ID, etc." -ForegroundColor Green

# Also write static/js/firebase-config.js for client
$cfgPath = Join-Path $PSScriptRoot "..\static\js\firebase-config.js"
$lines = @()
$lines += "// Auto-generated by scripts/prepare_firebase_env.ps1"
$json = ($cfg | ConvertTo-Json -Compress)
$lines += ("window.FIREBASE_CONFIG = " + $json + ";")
$lines += "window.USE_FIRESTORE_EMULATOR = false;"
$lines | Set-Content -Path $cfgPath -Encoding UTF8

Write-Host "==> Wrote client config to static/js/firebase-config.js" -ForegroundColor Green

